#!/bin/sh
# Start of the pre-commit hook

# Color codes for terminal output
CYAN='\033[0;36m'
GREEN='\033[0;32m'
RED='\033[0;31m'
BOLD='\033[1m'
RESET='\033[0m'

# Start message
echo -e "${CYAN}${BOLD}üîß Husky pre-commit hook is running...${RESET}"

# Get staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR | sed 's| |\\ |g')

if [ -n "$STAGED_FILES" ]; then
    echo "${CYAN}Formatting staged files...${RESET}"
    npm run format:fix
    FORMAT_STATUS=$?
    if [ $FORMAT_STATUS -ne 0 ]; then
        echo "${RED}${BOLD}‚ùå Error while formatting files (npm run format:fix)!${RESET}"
        exit 1
    fi

    echo -e "${CYAN}Running linter...${RESET}"
    npm run lint
    LINT_STATUS=$?
    if [ $LINT_STATUS -ne 0 ]; then
        echo -e "${RED}${BOLD}‚ùå Linter found errors. Trying to fix with lint:fix...${RESET}"
        npm run lint:fix
        LINT_FIX_STATUS=$?
        if [ $LINT_FIX_STATUS -ne 0 ]; then
            echo -e "${RED}${BOLD}‚ùå lint:fix could not fix all errors.${RESET}"
            exit 1
        fi
        echo -e "${GREEN}${BOLD}‚úÖ lint:fix applied corrections successfully.${RESET}"
    else
        echo -e "${GREEN}${BOLD}‚úÖ Linter passed without errors.${RESET}"
    fi
else
    echo -e "${CYAN}No staged files to format or lint.${RESET}"
fi

# End message
echo -e "${GREEN}${BOLD}‚úÖ Husky pre-commit hook completed successfully!${RESET}"
